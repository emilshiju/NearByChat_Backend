"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const userRepository_1 = require("../repositories/user/userRepository");
const userInteractor_1 = require("../interactors/user/userInteractor");
const userController_1 = require("../controllers/user/userController");
const jwtService_1 = require("../services/jwtService");
const multer_1 = __importDefault(require("multer"));
const storage = multer_1.default.diskStorage({});
const upload = (0, multer_1.default)({ storage: storage });
const router = express_1.default.Router();
const userRepository = new userRepository_1.UserRepository();
const userInteractor = new userInteractor_1.UserInteractor(userRepository);
const controller = new userController_1.UserController(userInteractor);
router.post('/register', controller.onCreateUser.bind(controller));
router.post('/refresh', controller.onRefreshToken.bind(controller));
router.post('/findUser', jwtService_1.verifyAccesToken, controller.onFindUser.bind(controller));
router.get('/auth/google', controller.googleAuth.bind(controller));
router.get('/auth/google/callback', controller.googleAuthCallback.bind(controller));
router.post('/checkEmail', controller.findEmail.bind(controller));
router.post('/googleLogin', controller.googleLogin.bind(controller));
router.post('/login', controller.login.bind(controller));
router.post('/saveLocation', controller.saveLocation.bind(controller));
router.post('/uploadProfile', upload.single('image'), controller.uploadProfileUser.bind(controller));
router.get('/userStatus/:id', controller.userStatus.bind(controller));
router.get('/sendOtp', controller.sendOtp.bind(controller));
router.get('/verifyOtp', controller.verifyOtp.bind(controller));
router.put('/editUserDetails', controller.editUserDetails.bind(controller));
router.get('/getOrderSummary/:id', controller.onGetOrderSummary.bind(controller));
router.patch('/changePassword', controller.onChangePassword.bind(controller));
exports.default = router;
