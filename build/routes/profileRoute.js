"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const profileInteractor_1 = require("../interactors/user/profileInteractor");
const profileRepository_1 = require("../repositories/user/profileRepository");
const profileController_1 = require("../controllers/user/profileController");
const jwtService_1 = require("../services/jwtService");
const rba_1 = require("../services/rba");
const route = express_1.default.Router();
const profileRepository = new profileRepository_1.ProfileRepository();
const profileInteractor = new profileInteractor_1.ProfileInteractor(profileRepository);
const controller = new profileController_1.profileController(profileInteractor);
route.post('/submitProfile', jwtService_1.verifyAccesToken, (0, rba_1.checkRole)(['user']), controller.onSubmitProfile.bind(controller));
route.get('/getProfile/:userId', jwtService_1.verifyAccesToken, (0, rba_1.checkRole)(['user']), controller.getProfileUrl.bind(controller));
route.patch('/updateImageUrl', jwtService_1.verifyAccesToken, (0, rba_1.checkRole)(['user']), controller.updateImageUrl.bind(controller));
route.get('/getAllNotification/:userId', jwtService_1.verifyAccesToken, (0, rba_1.checkRole)(['user']), controller.getAllNotification.bind(controller));
route.get('/checkConnectionStatus', jwtService_1.verifyAccesToken, (0, rba_1.checkRole)(['user']), controller.checkConnectionStatus.bind(controller));
route.post('/storePushNotification', controller.storePushNotification.bind(controller));
route.post('/UnsubscribeNotification', controller.UnsubscribeNotification.bind(controller));
route.post('/payment/order', controller.onPaymentOrder.bind(controller));
route.post('/payment/sucessfull', controller.onPaymentSuccesfull.bind(controller));
route.patch('/incrementSearchCount', controller.onChangeIncrementSearchCount.bind(controller));
route.get('/displayUserDetails/:id', controller.onDisplayUserDetails.bind(controller));
route.post('/hashPassword', controller.onHashPassword.bind(controller));
route.patch('/uploadUserProfileImage', controller.uploadUserProfileImage.bind(controller));
route.post('/deleteProfileImage', controller.onDeleteProfileImageUrl.bind(controller));
exports.default = route;
